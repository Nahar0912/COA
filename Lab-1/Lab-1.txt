1.
.MODEL SMALL
.STACK 100H
.DATA
.CODE

MAIN PROC 
    
    MOV AL, 'A' 
    
   
    CMP AL, 'A'
    JLE ELSE     
    
 
    MOV CL, '5'
    JMP PRINT_ 
    JMP EXIT
    
ELSE:
  
    MOV CL, '6'
    JMP PRINT_
    JMP EXIT
PRINT_:   
    
    MOV AH, 02H 
    ADD DL, CL
    INT 21H     
    
EXIT:
    MOV AH,4CH 
    INT 21H
    MAIN ENDP
END MAIN



2.
.MODEL SMALL
.STACK 100H
.DATA
.CODE

MAIN PROC 
    
    MOV AH, 01H 
    INT 21H     
    
    CMP AL, 'A' 
    JE CARRIAGE_RETURN
    
    CMP AL, 'B' 
    JNE LINE_FEED  
    
    JMP RETURN_TO_DOS
    
    LINE_FEED: 
        MOV AH, 02H 
        MOV DL, 0AH 
        INT 21H     
        JMP RETURN_TO_DOS  
    
    CARRIAGE_RETURN: 
        MOV AH, 02H 
        MOV DL, 0DH 
        INT 21H     
        JMP RETURN_TO_DOS   
    
    RETURN_TO_DOS: 
        MOV AH, 4CH 
        INT 21H     
    MAIN ENDP
END MAIN



3.
.MODEL SMALL
.STACK 100H
.DATA
.CODE

MAIN PROC 
   
    MOV AX, 40
    MOV BX, 20
    MOV CX, 30  
    
    CMP AX, BX
    JE THEN_1
    JG ELSE_1

   
    THEN_1:
        MOV AX, 0
        JMP RETURN_TO_DOS
    ELSE_1:
        CMP BX , CX
        JE THEN_2
        JG ELSE_2
    THEN_2:
        MOV BX, 0
        JMP RETURN_TO_DOS
    ELSE_2:
        MOV CX, 0
        JMP RETURN_TO_DOS

    
    RETURN_TO_DOS: 
        MOV AH, 4CH 
        INT 21H     
    MAIN ENDP
END MAIN



4.
.MODEL SMALL
.STACK 100H

.DATA 
promptMsg DB 'Please enter a character: $'
repeatMsg DB 0Dh, 0Ah, 'Do you want to do it again? (Y/N)/(y/n): $'
invalidMsg DB 0Dh, 0Ah, 'Input is not valid...Please try again.$'
newLine DB 0Dh, 0Ah, '$'

.CODE

MAIN PROC
    MOV AX, @DATA
    MOV DS, AX

    repeatProgram:
   
    LEA DX, newLine
    MOV AH, 9
    INT 21H
    LEA DX, promptMsg
    MOV AH, 9
    INT 21H


    MOV AH, 1
    INT 21H
    MOV BL, AL

 
    LEA DX, newLine
    MOV AH, 9
    INT 21H
    MOV DL, BL
    MOV AH, 2
    INT 21H

    
    LEA DX, repeatMsg
    MOV AH, 9
    INT 21H

   
    MOV AH, 1
    INT 21H
    CMP AL, 'y'
    JE repeatProgram
    CMP AL, 'Y'
    JE repeatProgram

 
    CMP AL, 'n'
    JE exitProgram
    CMP AL, 'N'
    JE exitProgram
      
      
    LEA DX, invalidMsg
    MOV AH, 9
    INT 21H
    JMP repeatProgram  
    
    
exitProgram:
MOV AH, 4Ch
INT 21H

MAIN ENDP
END MAIN