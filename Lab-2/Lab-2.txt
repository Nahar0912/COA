1.
.MODEL SMALL        
.STACK 100h         
.DATA              
.CODE              

MAIN PROC           
    MOV AH, 02h     
    MOV BL, 'o'     
    MOV CL, 'e'     
    MOV DL, 3       

    CMP DL, 1       
    JE PRINT_O      
    
    CMP DL, 3       
    JE PRINT_O      
    
    CMP DL, 2       
    JE PRINT_E      
    
    CMP DL, 4       
    JE PRINT_E      
    
    JMP END_IF      

PRINT_O:
    MOV DL, BL      
    INT 21h         
    JMP END_IF      

PRINT_E:
    MOV DL, CL      
    INT 21h         

END_IF:
    MOV AH, 4CH     
    INT 21h         

MAIN ENDP           
END MAIN            



2.
.MODEL SMALL        
.STACK 100h         
.DATA              
.CODE              

MAIN PROC           
    MOV AH, 02h     
    MOV BL, 'b'     
    MOV DL, 2       
    MOV CL, 1       

    CMP DL, 3       
    JGE END_IF      
    
    CMP CL, 3       
    JGE END_IF      
    
    MOV DL, BL      
    INT 21h         
    
END_IF:
    MOV AH, 4CH     
    INT 21h         

MAIN ENDP           
END MAIN            



3.
.MODEL SMALL        
.STACK 100h         
.DATA              
    INPUT_MSG DB 'Enter a number: $'  
.CODE  

         
MAIN PROC 

    MOV AX, @DATA
    MOV DS, AX

    MOV AH, 09h     
    LEA DX, INPUT_MSG 
    INT 21h         

    MOV AH, 01h     
    INT 21h         
    SUB AL, '0'     

    CMP AL, 1       
    JE SUM          

    CMP AL, 2       
    JE SUBTRACT     

    CMP AL, 3       
    JE PRINT        

    MOV AH, 02h     
    MOV DL, 'c'     
    INT 21h         
    JMP END_IF      

SUM:
    MOV AH, 02h     
    MOV DL, '5'     
    INT 21h         
    JMP END_IF      

SUBTRACT:
    MOV AH, 02h     
    MOV DL, '1'     
    INT 21h         
    JMP END_IF      

PRINT:
    MOV AH, 02h     
    MOV DL, AL      
    ADD DL, '0'     
    INT 21h         

END_IF:
    MOV AH, 4CH     
    INT 21h         

MAIN ENDP           
END MAIN            



4.
.MODEL SMALL
.STACK 100h
.DATA
    char DB ? 
    prompt DB 'Enter a character: $'
.CODE


MAIN PROC

    MOV AX, @DATA
    MOV DS, AX
    
    MOV AH, 9
    LEA DX, prompt
    INT 21h
        
    MOV AH, 1
    INT 21h
    MOV char, AL 
    
    MOV CX, 30 
PRINT_LOOP:
    MOV AH, 2 
    MOV DL, char 
    INT 21h 
    LOOP PRINT_LOOP 
    
    
    MOV AH, 4CH 
    INT 21h 
    
MAIN ENDP
END MAIN



5.
.MODEL SMALL
.STACK 100h
.DATA
    char DB ?
    prompt DB 'Enter a character: $'
.CODE


MAIN PROC
    MOV AX, @DATA
    MOV DS, AX
    
    MOV AH, 9
    LEA DX, prompt
    INT 21h
        
    MOV AH, 1
    INT 21h
    MOV char, AL 
    
    MOV CX, 30
    MOV BX, 0  
    
    
PRINT_LOOP:
    MOV AH, 2
    MOV DL, char
    INT 21h
    INC BX
    
    CMP BX, 10
    JNE NO_NEWLINE
    
    MOV AH, 2
    MOV DL, 0DH
    INT 21h
    MOV DL, 0AH
    INT 21h
    MOV BX, 0 
    
    
NO_NEWLINE:
    LOOP PRINT_LOOP 
    
    MOV AH, 4CH
    INT 21h 
    
MAIN ENDP
END MAIN



6.
.MODEL SMALL
.STACK 100h
.DATA
    input DB ?
    promptMsg DB 'Enter a character: $'
    newLine DB 0Dh, 0Ah, '$'
.CODE


MAIN PROC
    MOV AX, @DATA
    MOV DS, AX
    
INPUT_LOOP: 

    MOV AH, 9
    LEA DX, newLine
    INT 21H
    MOV AH, 9
    LEA DX, promptMsg
    INT 21h
        
    MOV AH, 1
    INT 21h
    MOV input, AL 
    
   
    CMP input, 0DH 
    JE END_LOOP
    
    
    LEA DX, newLine
    MOV AH, 9
    INT 21H
    MOV AH, 2 
    MOV DL, input 
    INT 21h 
    
    JMP INPUT_LOOP

END_LOOP:
    MOV AH, 4CH 
    INT 21h 
    
MAIN ENDP
END MAIN




7.
.MODEL SMALL
.STACK 100H
.DATA
    String DB 6 
.CODE

MAIN PROC

    MOV AX,@DATA
    MOV DS,AX

    MOV AH,0AH 
    MOV DX,OFFSET String
    INT 21H 
EXIT:
    MOV AH, 4CH 
    INT 21H 

MAIN ENDP




8.
.MODEL SMALL
.STACK 100h
.DATA
    prompt DB 'Enter a character: $'
.CODE
MAIN PROC
    MOV AX, @DATA
    MOV DS, AX

   
    MOV AL, 3 
    
    CMP AL, 2
    JLE ELSE
    CMP AL, 9
    JGE ELSE
    
    
    MOV AH, 9
    LEA DX, prompt
    INT 21h
    
    MOV AH, 1
    INT 21h
    MOV DL, AL
    MOV AH, 2
    INT 21h
    
    JMP END_IF

    
ELSE:

    MOV AH, 1
    INT 21h

    CMP AL, 'a'
    JL PRINT_N 
    
    CMP AL, 'z'
    JG CHECK_UPPERCASE
    JMP PRINT_C
 
 
CHECK_UPPERCASE:

    CMP AL, 'A'
    JL PRINT_N 
    
    CMP AL, 'Z'
    JG PRINT_N
    JMP PRINT_C

    
PRINT_C:
   
    MOV AH, 02H
    MOV DL, 'c'
    INT 21h
    
    JMP END_IF
 
    
PRINT_N:
   
    MOV AH, 02H
    MOV DL, 'n'
    INT 21h

    
END_IF:
    MOV AH, 4CH
    INT 21h

    
MAIN ENDP
END MAIN
